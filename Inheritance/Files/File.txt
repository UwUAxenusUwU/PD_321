
<!DOCTYPE html>
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">







<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Oswald:wght@400&family=Roboto+Condensed:wght@400;700&family=Inconsolata:wght@400&family=Roboto:ital,wght@0,400;0,700;1,700&display=swap" rel="stylesheet">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v3.3.4/site.css">
<script src="/v3.3.4/main.js" type="text/javascript"></script>
<script type="text/javascript">
	(function(){
		var bsa_optimize=document.createElement('script');
		bsa_optimize.type='text/javascript';
		bsa_optimize.async=true;
		bsa_optimize.src='https://cdn4.buysellads.net/pub/cplusplus.js?'+(new Date()-new Date()%600000);
		(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa_optimize);
	})();
</script>
</head>

<body>
<div id="I_container">
<div id="I_top">
<div id="I_header">

<div id="I_logo"><a href="/">
<div id="I_icon" title="C++"></div>
<div id="I_site" title="cplusplus.com">
<svg xmlns='http://www.w3.org/2000/svg' style='fill:#fff' viewBox='0 0 120 36'><text x='0' y='22' textLength='120' lengthAdjust='spacingAndGlyphs' font-family='Roboto,sans-serif' font-size='22px' font-style='italic' font-weight='bold' style='fill:#fff'>cplusplus</text><text id='tld' x='80' y='34' textLength='38' lengthAdjust='spacingAndGlyphs' font-family='Roboto,arial' font-size='12px' font-style='italic' font-weight='bold' style='fill:#cde'>.com</text></svg>
</div>
</a></div>

<div id="I_navsch">

<div id="I_navigation">
<ul>
<li><a href="/doc/">TUTORIALS</a></li>
<li><a href="/reference/">REFERENCE</a></li>
<li><a href="/articles/">ARTICLES</a></li>
<li><a href="/forum/">FORUM</a></li>
</ul>
</div>

<div id="I_search">

    <script async src="https://cse.google.com/cse.js?cx=partner-pub-7688470879129516:0646519325"></script>
    <div class="gcse-searchbox-only" enableAutoComplete="true" resultsUrl="'.$url_search.'"></div>

</div>

</div>
<div id="I_user" class="C_LoginBox" data-ajax="ajax"></div></div>
</div>

<div id="I_mid">

<div id="I_cols">

<div id="I_left">
<div id="I_nav">

<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder doc"><a href="/doc/">Tutorials</a></li><li class="folder selected reference"><a href="/reference/">Reference</a></li><li class="folder articles"><a href="/articles/">Articles</a></li><li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div><div class="C_BoxLabels C_BoxSort sect">
            <h3><b><a href="/reference/">Reference</a></b></h3>
            <ul><li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="folder">
            
            <a href="/reference/cassert/" title="&lt;cassert&gt; (assert.h)">
            <span>&lt;cassert&gt; (assert.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cctype/" title="&lt;cctype&gt; (ctype.h)">
            <span>&lt;cctype&gt; (ctype.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cerrno/" title="&lt;cerrno&gt; (errno.h)">
            <span>&lt;cerrno&gt; (errno.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/cfenv/" title="&lt;cfenv&gt; (fenv.h)">
            <span>&lt;cfenv&gt; (fenv.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cfloat/" title="&lt;cfloat&gt; (float.h)">
            <span>&lt;cfloat&gt; (float.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/cinttypes/" title="&lt;cinttypes&gt; (inttypes.h)">
            <span>&lt;cinttypes&gt; (inttypes.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/ciso646/" title="&lt;ciso646&gt; (iso646.h)">
            <span>&lt;ciso646&gt; (iso646.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/climits/" title="&lt;climits&gt; (limits.h)">
            <span>&lt;climits&gt; (limits.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/clocale/" title="&lt;clocale&gt; (locale.h)">
            <span>&lt;clocale&gt; (locale.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cmath/" title="&lt;cmath&gt; (math.h)">
            <span>&lt;cmath&gt; (math.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/csetjmp/" title="&lt;csetjmp&gt; (setjmp.h)">
            <span>&lt;csetjmp&gt; (setjmp.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/csignal/" title="&lt;csignal&gt; (signal.h)">
            <span>&lt;csignal&gt; (signal.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cstdarg/" title="&lt;cstdarg&gt; (stdarg.h)">
            <span>&lt;cstdarg&gt; (stdarg.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/cstdbool/" title="&lt;cstdbool&gt; (stdbool.h)">
            <span>&lt;cstdbool&gt; (stdbool.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cstddef/" title="&lt;cstddef&gt; (stddef.h)">
            <span>&lt;cstddef&gt; (stddef.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/cstdint/" title="&lt;cstdint&gt; (stdint.h)">
            <span>&lt;cstdint&gt; (stdint.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cstdio/" title="&lt;cstdio&gt; (stdio.h)">
            <span>&lt;cstdio&gt; (stdio.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cstdlib/" title="&lt;cstdlib&gt; (stdlib.h)">
            <span>&lt;cstdlib&gt; (stdlib.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cstring/" title="&lt;cstring&gt; (string.h)">
            <span>&lt;cstring&gt; (string.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/ctgmath/" title="&lt;ctgmath&gt; (tgmath.h)">
            <span>&lt;ctgmath&gt; (tgmath.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/ctime/" title="&lt;ctime&gt; (time.h)">
            <span>&lt;ctime&gt; (time.h)</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/cuchar/" title="&lt;cuchar&gt; (uchar.h)">
            <span>&lt;cuchar&gt; (uchar.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cwchar/" title="&lt;cwchar&gt; (wchar.h)">
            <span>&lt;cwchar&gt; (wchar.h)</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/cwctype/" title="&lt;cwctype&gt; (wctype.h)">
            <span>&lt;cwctype&gt; (wctype.h)</span>
            </a>
            </li>
</ul></li><li class="C_Collapsable"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/array/" title="&lt;array&gt;">
            <span>&lt;array&gt;</span>
            </a>
            </li>
<li class="selected folder">
            
            <a href="/reference/deque/" title="&lt;deque&gt;">
            <span>&lt;deque&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/forward_list/" title="&lt;forward_list&gt;">
            <span>&lt;forward_list&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/list/" title="&lt;list&gt;">
            <span>&lt;list&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/map/" title="&lt;map&gt;">
            <span>&lt;map&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/queue/" title="&lt;queue&gt;">
            <span>&lt;queue&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/set/" title="&lt;set&gt;">
            <span>&lt;set&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/stack/" title="&lt;stack&gt;">
            <span>&lt;stack&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/unordered_map/" title="&lt;unordered_map&gt;">
            <span>&lt;unordered_map&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/unordered_set/" title="&lt;unordered_set&gt;">
            <span>&lt;unordered_set&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/vector/" title="&lt;vector&gt;">
            <span>&lt;vector&gt;</span>
            </a>
            </li>
</ul></li><li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="folder">
            
            <a href="/reference/fstream/" title="&lt;fstream&gt;">
            <span>&lt;fstream&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/iomanip/" title="&lt;iomanip&gt;">
            <span>&lt;iomanip&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/ios/" title="&lt;ios&gt;">
            <span>&lt;ios&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/iosfwd/" title="&lt;iosfwd&gt;">
            <span>&lt;iosfwd&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/iostream/" title="&lt;iostream&gt;">
            <span>&lt;iostream&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/istream/" title="&lt;istream&gt;">
            <span>&lt;istream&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/ostream/" title="&lt;ostream&gt;">
            <span>&lt;ostream&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/sstream/" title="&lt;sstream&gt;">
            <span>&lt;sstream&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/streambuf/" title="&lt;streambuf&gt;">
            <span>&lt;streambuf&gt;</span>
            </a>
            </li>
</ul></li><li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/atomic/" title="&lt;atomic&gt;">
            <span>&lt;atomic&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/condition_variable/" title="&lt;condition_variable&gt;">
            <span>&lt;condition_variable&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/future/" title="&lt;future&gt;">
            <span>&lt;future&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/mutex/" title="&lt;mutex&gt;">
            <span>&lt;mutex&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/thread/" title="&lt;thread&gt;">
            <span>&lt;thread&gt;</span>
            </a>
            </li>
</ul></li><li class="C_Collapsable collapsed"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="folder">
            
            <a href="/reference/algorithm/" title="&lt;algorithm&gt;">
            <span>&lt;algorithm&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/bitset/" title="&lt;bitset&gt;">
            <span>&lt;bitset&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/chrono/" title="&lt;chrono&gt;">
            <span>&lt;chrono&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/codecvt/" title="&lt;codecvt&gt;">
            <span>&lt;codecvt&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/complex/" title="&lt;complex&gt;">
            <span>&lt;complex&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/exception/" title="&lt;exception&gt;">
            <span>&lt;exception&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/functional/" title="&lt;functional&gt;">
            <span>&lt;functional&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/initializer_list/" title="&lt;initializer_list&gt;">
            <span>&lt;initializer_list&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/iterator/" title="&lt;iterator&gt;">
            <span>&lt;iterator&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/limits/" title="&lt;limits&gt;">
            <span>&lt;limits&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/locale/" title="&lt;locale&gt;">
            <span>&lt;locale&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/memory/" title="&lt;memory&gt;">
            <span>&lt;memory&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/new/" title="&lt;new&gt;">
            <span>&lt;new&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/numeric/" title="&lt;numeric&gt;">
            <span>&lt;numeric&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/random/" title="&lt;random&gt;">
            <span>&lt;random&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/ratio/" title="&lt;ratio&gt;">
            <span>&lt;ratio&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/regex/" title="&lt;regex&gt;">
            <span>&lt;regex&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/stdexcept/" title="&lt;stdexcept&gt;">
            <span>&lt;stdexcept&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/string/" title="&lt;string&gt;">
            <span>&lt;string&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/system_error/" title="&lt;system_error&gt;">
            <span>&lt;system_error&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/tuple/" title="&lt;tuple&gt;">
            <span>&lt;tuple&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/type_traits/" title="&lt;type_traits&gt;">
            <span>&lt;type_traits&gt;</span>
            </a>
            </li>
<li class="folder">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/typeindex/" title="&lt;typeindex&gt;">
            <span>&lt;typeindex&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/typeinfo/" title="&lt;typeinfo&gt;">
            <span>&lt;typeinfo&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/utility/" title="&lt;utility&gt;">
            <span>&lt;utility&gt;</span>
            </a>
            </li>
<li class="folder">
            
            <a href="/reference/valarray/" title="&lt;valarray&gt;">
            <span>&lt;valarray&gt;</span>
            </a>
            </li>
</ul></li></ul>
            </div><div class="C_BoxLabels C_BoxSort sect">
            <h3><b><a href="/reference/deque/">&lt;deque&gt;</a></b></h3>
            <ul><li class="selected folder">
            
            <a href="/reference/deque/deque/" title="deque">
            <span>deque</span>
            </a>
            </li>
</ul>
            </div><div class="C_BoxLabels C_BoxSort sect">
            <h3><b><a href="/reference/deque/deque/">deque</a></b></h3>
            <ul><li class="">
            
            <a href="/reference/deque/deque/~deque/" title="deque::~deque">
            <span>deque::~deque</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/deque/" title="deque::deque">
            <span>deque::deque</span>
            </a>
            </li>
<li class="C_Collapsable"><h4>member functions</h4><ul><li class="">
            
            <a href="/reference/deque/deque/assign/" title="deque::assign">
            <span>deque::assign</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/at/" title="deque::at">
            <span>deque::at</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/back/" title="deque::back">
            <span>deque::back</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/begin/" title="deque::begin">
            <span>deque::begin</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/cbegin/" title="deque::cbegin">
            <span>deque::cbegin</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/cend/" title="deque::cend">
            <span>deque::cend</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/clear/" title="deque::clear">
            <span>deque::clear</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/crbegin/" title="deque::crbegin">
            <span>deque::crbegin</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/crend/" title="deque::crend">
            <span>deque::crend</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/emplace/" title="deque::emplace">
            <span>deque::emplace</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/emplace_back/" title="deque::emplace_back">
            <span>deque::emplace_back</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/emplace_front/" title="deque::emplace_front">
            <span>deque::emplace_front</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/empty/" title="deque::empty">
            <span>deque::empty</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/end/" title="deque::end">
            <span>deque::end</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/erase/" title="deque::erase">
            <span>deque::erase</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/front/" title="deque::front">
            <span>deque::front</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/get_allocator/" title="deque::get_allocator">
            <span>deque::get_allocator</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/insert/" title="deque::insert">
            <span>deque::insert</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/max_size/" title="deque::max_size">
            <span>deque::max_size</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/operator[]/" title="deque::operator[]">
            <span>deque::operator[]</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/operator=/" title="deque::operator=">
            <span>deque::operator=</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/pop_back/" title="deque::pop_back">
            <span>deque::pop_back</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/pop_front/" title="deque::pop_front">
            <span>deque::pop_front</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/push_back/" title="deque::push_back">
            <span>deque::push_back</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/push_front/" title="deque::push_front">
            <span>deque::push_front</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/rbegin/" title="deque::rbegin">
            <span>deque::rbegin</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/rend/" title="deque::rend">
            <span>deque::rend</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/resize/" title="deque::resize">
            <span>deque::resize</span>
            </a>
            </li>
<li class="">
            <div class="C_Label" title="since C++11"><div>C++11</div></div>
            <a href="/reference/deque/deque/shrink_to_fit/" title="deque::shrink_to_fit">
            <span>deque::shrink_to_fit</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/size/" title="deque::size">
            <span>deque::size</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/swap/" title="deque::swap">
            <span>deque::swap</span>
            </a>
            </li>
</ul></li><li class="C_Collapsable"><h4>non-member overloads</h4><ul><li class="">
            
            <a href="/reference/deque/deque/operators/" title="relational operators (deque)">
            <span>relational operators (deque)</span>
            </a>
            </li>
<li class="">
            
            <a href="/reference/deque/deque/swap-free/" title="swap (deque)">
            <span>swap (deque)</span>
            </a>
            </li>
</ul></li></ul>
            </div><div id="I_subnav"></div></div>
</div>
<div id="I_main">

<div id="I_bar">
<div id="I_burger">
<svg focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg>
</div>
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/deque/">&lt;deque&gt;</a></li>
<li class="here">deque</li>
</ul>
</div>
<div class="C_bn" style="width:100%">
    <!-- cplusplus_S2S_Leaderboard_ATF_ROS -->
    <style>
        @media only screen and (min-width: 0px) and (min-height: 0px) {
            div[id^="bsa-zone_1661765511757-3_123456"] {
                min-width: 300px;
                min-height: 50px;
            }
        }
        @media only screen and (min-width: 640px) and (min-height: 0px) {
            div[id^="bsa-zone_1661765511757-3_123456"] {
                min-width: 468px;
                min-height: 60px;
            }
        }
    </style>
    <div id="bsa-zone_1661765511757-3_123456"></div>
    </div>
<div id="I_content">
<div class="C_doc"><div id="I_type">class template</div>
<div id="I_file">&lt;deque&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>deque</h1>
<div class="C_prototype"><pre>template &lt; class T, class Alloc = allocator&lt;T&gt; &gt; class deque;</pre></div>
<div id="I_description">Double ended queue</div>
<section id="description">
<b>deque</b> (usually pronounced like <i>"deck"</i>) is an irregular acronym of <b>d</b>ouble-<b>e</b>nded <b>que</b>ue. Double-ended queues are sequence containers with dynamic sizes that can be expanded or contracted on both ends (either its front or its back).<br>
<br>
Specific libraries may implement <i>deques</i> in different ways, generally as some form of dynamic array. But in any case, they allow for the individual elements to be accessed directly through random access iterators, with storage handled automatically by expanding and contracting the container as needed.<br>
<br>
Therefore, they provide a functionality similar to <a href="/vector">vectors</a>, but with efficient insertion and deletion of elements also at the beginning of the sequence, and not only at its end. But, unlike <a href="/vector">vectors</a>, <a href="/deque">deques</a> are not guaranteed to store all its elements in contiguous storage locations: accessing elements in a <code>deque</code> by offsetting a pointer to another element causes <i>undefined behavior</i>.<br>
<br>
Both <a href="/vector">vectors</a> and deques provide a very similar interface and can be used for similar purposes, but internally both work in quite different ways: While vectors use a single array that needs to be occasionally reallocated for growth, the elements of a deque can be scattered in different chunks of storage, with the container keeping the necessary information internally to provide direct access to any of its elements in constant time and with a uniform sequential interface (through iterators). Therefore, deques are a little more complex internally than <a href="/vector">vectors</a>, but this allows them to grow more efficiently under certain circumstances, especially with very long sequences, where reallocations become more expensive.<br>
<br>
For operations that involve frequent insertion or removals of elements at positions other than the beginning or the end, deques perform worse and have less consistent iterators and references than <a href="/list">lists</a> and <a href="/forward_list">forward lists</a>.<br>
</section>
<br>
<section id="properties">
<h3>Container properties</h3>
<dl>
<dt>Sequence</dt>
<dd>Elements in sequence containers are ordered in a strict linear sequence. Individual elements are accessed by their position in this sequence.</dd>
<dt>Dynamic array</dt>
<dd>Generally implemented as a dynamic array, it allows direct access to any element in the sequence and provides relatively fast addition/removal of elements at the beginning or the end of the sequence.</dd>
<dt>Allocator-aware</dt>
<dd>The container uses an allocator object to dynamically handle its storage needs.</dd>
</dl>
</section>
<br>
<section id="parameters">
<h3>Template parameters</h3>
<dl>
<dt>T</dt>
<dd>Type of the elements.<br>
Aliased as member type <tt>deque::value_type</tt>.</dd>
<dt>Alloc</dt>
<dd>Type of the allocator object used to define the storage allocation model. By default, the <a href="/allocator">allocator</a> class template is used, which defines the simplest memory allocation model and is value-independent.<br>
Aliased as member type <tt>deque::allocator_type</tt>.</dd>
</dl>
</section>
<br>
<section id="types">
<h3>Member types</h3>
<div class="C_SwitchCases">
<div title="C++98">
<table class="boxed">
<tr><th>member type</th><th>definition</th><th>notes</th></tr>
<tr><td><tt>value_type</tt></td><td>The first template parameter (<tt>T</tt>)</td><td></td></tr>
<tr><td><tt>allocator_type</tt></td><td>The second template parameter (<tt>Alloc</tt>)</td><td>defaults to: <tt><a href="/allocator">allocator</a>&lt;value_type&gt;</tt></td></tr>
<tr><td><tt>reference</tt></td><td><tt>allocator_type::reference</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>value_type&</tt></td></tr>
<tr><td><tt>const_reference</tt></td><td><tt>allocator_type::const_reference</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>const value_type&</tt></td></tr>
<tr><td><tt>pointer</tt></td><td><tt>allocator_type::pointer</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>value_type*</tt></td></tr>
<tr><td><tt>const_pointer</tt></td><td><tt>allocator_type::const_pointer</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>const value_type*</tt></td></tr>
<tr><td><tt>iterator</tt></td><td>a <a href="/RandomAccessIterator">random access iterator</a> to <tt>value_type</tt></td><td>convertible to <tt>const_iterator</tt></td></tr>
<tr><td><tt>const_iterator</tt></td><td>a <a href="/RandomAccessIterator">random access iterator</a> to <tt>const value_type</tt></td><td></td></tr>
<tr><td><tt>reverse_iterator</tt></td><td><tt><a href="/reverse_iterator">reverse_iterator</a>&lt;iterator&gt;</tt></td><td></td></tr>
<tr><td><tt>const_reverse_iterator</tt></td><td><tt><a href="/reverse_iterator">reverse_iterator</a>&lt;const_iterator&gt;</tt></td><td></td></tr>
<tr><td><tt>difference_type</tt></td><td>a signed integral type, identical to: <tt>iterator_traits&lt;iterator&gt;::difference_type</tt></td><td>usually the same as <a href="/ptrdiff_t">ptrdiff_t</a></td></tr>
<tr><td><tt>size_type</tt></td><td>an unsigned integral type that can represent any non-negative value of <tt>difference_type</tt></td><td>usually the same as <a href="/size_t">size_t</a></td></tr>
</table>
</div>
<div title="C++11">
<table class="boxed">
<tr><th>member type</th><th>definition</th><th>notes</th></tr>
<tr><td><tt>value_type</tt></td><td>The first template parameter (<tt>T</tt>)</td><td></td></tr>
<tr><td><tt>allocator_type</tt></td><td>The second template parameter (<tt>Alloc</tt>)</td><td>defaults to: <tt><a href="/allocator">allocator</a>&lt;value_type&gt;</tt></td></tr>
<tr><td><tt>reference</tt></td><td><tt>value_type&</tt></td><td></td></tr>
<tr><td><tt>const_reference</tt></td><td><tt>const value_type&</tt></td><td></td></tr>
<tr><td><tt>pointer</tt></td><td><tt><a href="/allocator_traits">allocator_traits</a>&lt;allocator_type&gt;::pointer</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>value_type*</tt></td></tr>
<tr><td><tt>const_pointer</tt></td><td><tt><a href="/allocator_traits">allocator_traits</a>&lt;allocator_type&gt;::const_pointer</tt></td><td>for the default <a href="/allocator">allocator</a>: <tt>const value_type*</tt></td></tr>
<tr><td><tt>iterator</tt></td><td>a <a href="/RandomAccessIterator">random access iterator</a> to <tt>value_type</tt></td><td>convertible to <tt>const_iterator</tt></td></tr>
<tr><td><tt>const_iterator</tt></td><td>a <a href="/RandomAccessIterator">random access iterator</a> to <tt>const value_type</tt></td><td></td></tr>
<tr><td><tt>reverse_iterator</tt></td><td><tt><a href="/reverse_iterator">reverse_iterator</a>&lt;iterator&gt;</tt></td><td></td></tr>
<tr><td><tt>const_reverse_iterator</tt></td><td><tt><a href="/reverse_iterator">reverse_iterator</a>&lt;const_iterator&gt;</tt></td><td></td></tr>
<tr><td><tt>difference_type</tt></td><td>a signed integral type, identical to:<br>
<tt>iterator_traits&lt;iterator&gt;::difference_type</tt></td><td>usually the same as <a href="/ptrdiff_t">ptrdiff_t</a></td></tr>
<tr><td><tt>size_type</tt></td><td>an unsigned integral type that can represent any non-negative value of <tt>difference_type</tt></td><td>usually the same as <a href="/size_t">size_t</a></td></tr>
</table>
</div>
</div>
</section>
<br>
<section id="functions">
<h3>Member functions</h3>
<dl class="links"><dt><a href= "/reference/deque/deque/deque/"><strong>(constructor)</strong></a></dt><dd>Construct deque container <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/~deque/"><strong>(destructor)</strong></a></dt><dd>Deque destructor <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/operator=/"><strong>operator=</strong></a></dt><dd>Assign content <span class="typ">(public member function)</span></dd></dl>
<br>
<b>Iterators</b>:<br>
<dl class="links"><dt><a href= "/reference/deque/deque/begin/"><strong>begin</strong></a></dt><dd>Return iterator to beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/end/"><strong>end</strong></a></dt><dd>Return iterator to end <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/rbegin/"><strong>rbegin</strong></a></dt><dd>Return reverse iterator to reverse beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/rend/"><strong>rend</strong></a></dt><dd>Return reverse iterator to reverse end <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/cbegin/"><strong>cbegin </strong></a></dt><dd>Return const_iterator to beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/cend/"><strong>cend </strong></a></dt><dd>Return const_iterator to end <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/crbegin/"><strong>crbegin </strong></a></dt><dd>Return const_reverse_iterator to reverse beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/crend/"><strong>crend </strong></a></dt><dd>Return const_reverse_iterator to reverse end <span class="typ">(public member function)</span></dd></dl>
<br>
<b>Capacity</b>:<br>
<dl class="links"><dt><a href= "/reference/deque/deque/size/"><strong>size</strong></a></dt><dd>Return size <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/max_size/"><strong>max_size</strong></a></dt><dd>Return maximum size <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/resize/"><strong>resize</strong></a></dt><dd>Change size <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/empty/"><strong>empty</strong></a></dt><dd>Test whether container is empty <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/shrink_to_fit/"><strong>shrink_to_fit </strong></a></dt><dd>Shrink to fit <span class="typ">(public member function)</span></dd></dl>
<br>
<b>Element access</b>:<br>
<dl class="links"><dt><a href= "/reference/deque/deque/operator[]/"><strong>operator[]</strong></a></dt><dd>Access element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/at/"><strong>at</strong></a></dt><dd>Access element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/front/"><strong>front</strong></a></dt><dd>Access first element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/back/"><strong>back</strong></a></dt><dd>Access last element <span class="typ">(public member function)</span></dd></dl>
<br>
<b>Modifiers</b>:<br>
<dl class="links"><dt><a href= "/reference/deque/deque/assign/"><strong>assign</strong></a></dt><dd>Assign container content <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/push_back/"><strong>push_back</strong></a></dt><dd>Add element at the end <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/push_front/"><strong>push_front</strong></a></dt><dd>Insert element at beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/pop_back/"><strong>pop_back</strong></a></dt><dd>Delete last element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/pop_front/"><strong>pop_front</strong></a></dt><dd>Delete first element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/insert/"><strong>insert</strong></a></dt><dd>Insert elements <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/erase/"><strong>erase</strong></a></dt><dd>Erase elements <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/swap/"><strong>swap</strong></a></dt><dd>Swap content <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/clear/"><strong>clear</strong></a></dt><dd>Clear content <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/emplace/"><strong>emplace </strong></a></dt><dd>Construct and insert element <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/emplace_front/"><strong>emplace_front </strong></a></dt><dd>Construct and insert element at beginning <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/emplace_back/"><strong>emplace_back </strong></a></dt><dd>Construct and insert element at the end <span class="typ">(public member function)</span></dd></dl>
<br>
<b>Allocator</b>:<br>
<dl class="links"><dt><a href= "/reference/deque/deque/get_allocator/"><strong>get_allocator</strong></a></dt><dd>Get allocator <span class="typ">(public member function)</span></dd></dl>
<br>
<h3>Non-member functions overloads</h3>
<dl class="links"><dt><a href= "/reference/deque/deque/operators/"><strong>relational operators</strong></a></dt><dd>Relational operators for deque <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/swap-free/"><strong>swap</strong></a></dt><dd>Exchanges the contents of two deque containers <span class="typ">(function template)</span></dd></dl>
</section></div><div id="CH_bb"></div>
</div>
<div class="C_bn" style="width:100%">
    <!-- cplusplus_S2S_Leaderboard_BTF_ROS -->
    <style>
        @media only screen and (min-width: 0px) and (min-height: 0px) {
            div[id^="bsa-zone_1661765573868-8_123456"] {
                min-width: 300px;
                min-height: 50px;
            }
        }
        @media only screen and (min-width: 640px) and (min-height: 0px) {
            div[id^="bsa-zone_1661765573868-8_123456"] {
                min-width: 468px;
                min-height: 60px;
            }
        }
    </style>
    <div id="bsa-zone_1661765573868-8_123456"></div>
    </div></div>
<div id="I_midclear"></div>
</div>
</div>

<div id="I_bottom">
<div id="I_footer">
<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2023 - All rights reserved - <i>v3.3.4s</i>
<br><a href="/contact.do?referrer=%2Freference%2Fdeque%2Fdeque%2F" rel="nofollow">Spotted an error? contact us</a>
</div>
</div>
</div>


<script type="text/javascript">
 cplusplus.onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth("su")) {
			el.appendChild(cplusplus.btn('New Page','New Page','new','/reference/deque/deque/new.do'));
			el.appendChild(cplusplus.btn('Edit Page','Edit Page','edit','/reference/deque/deque/edit.do'));
			
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/deque/deque/delete.do'; }
cplusplus.ready();

var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>
